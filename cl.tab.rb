#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require './cl.rex.rb'

class ClParser < Racc::Parser

module_eval(<<'...end cl.racc/module_eval...', 'cl.racc', 132)

  def parse(file, file_name)
    @file_name = file_name
    @q = ClLexer.new
    @q.load_file(file_name)
    @yydebug = true
    do_parse
  end

  def next_token
    @q.next_token
  end

  def on_error(t, v, values)
    if v
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@file_name}:#{line}: syntax error on #{v.inspect}"
  end
...end cl.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,    37,    36,     5,     9,    32,    10,    23,    50,    22,
    24,    25,    23,    32,    22,    24,    25,    14,    52,    32,
    23,    42,    22,    24,    25,    32,    23,    34,    22,    24,
    25,    33,    23,    30,    22,    24,    25,    19,    17,    34,
    33,    20,    37,    36,    23,    20,    22,    24,    25,    32,
    37,    36,    37,    36,    49,    19,    23,    39,    22,    24,
    25,    32,    23,    20,    22,    24,    25,    32,    23,    38,
    22,    24,    25,    35,    23,    28,    22,    24,    25,    37,
   -31,    14,    51,    12,    11,    53,     3,    54,    55,    56,
    57,    58,    14,    60,    61 ]

racc_action_check = [
    33,    41,    41,     2,     2,    36,     2,    33,    41,    33,
    33,    33,    36,    46,    36,    36,    36,    35,    46,    37,
    46,    34,    46,    46,    46,    38,    37,    32,    37,    37,
    37,    19,    38,    15,    38,    38,    38,     9,     9,    19,
    30,    15,    21,    21,     9,     9,     9,     9,     9,    40,
    48,    48,    31,    31,    40,    14,    40,    28,    40,    40,
    40,    39,    14,    14,    14,    14,    14,    16,    39,    22,
    39,    39,    39,    20,    16,    10,    16,    16,    16,    44,
    44,     7,    43,     4,     3,    47,     1,    50,    53,    54,
    55,    56,    57,    58,    59 ]

racc_action_pointer = [
   nil,    86,    -1,    84,    79,   nil,   nil,    76,   nil,    32,
    67,   nil,   nil,   nil,    50,    28,    62,   nil,   nil,    22,
    64,    40,    60,   nil,   nil,   nil,   nil,   nil,    48,   nil,
    31,    50,    10,    -5,    16,    12,     0,    14,    20,    56,
    44,    -1,   nil,    72,    77,   nil,     8,    75,    48,   nil,
    75,   nil,   nil,    77,    77,    81,    81,    87,    83,    84,
   nil,   nil ]

racc_action_default = [
    -2,   -31,    -1,   -31,   -31,    -4,    -5,    -7,    -8,   -11,
   -31,    62,    -3,    -6,   -11,    -9,   -10,   -12,   -14,   -24,
   -31,   -19,   -31,   -25,   -26,   -27,   -29,   -30,   -31,   -15,
   -31,   -20,   -24,   -31,   -31,   -31,   -31,   -31,   -31,   -31,
   -31,   -19,   -28,   -31,   -21,   -22,   -31,   -30,   -31,   -16,
   -31,   -18,   -23,   -31,   -31,   -31,   -31,   -31,   -31,   -31,
   -17,   -13 ]

racc_goto_table = [
     6,    31,    40,     8,     7,    13,     4,    46,     2,    47,
    29,     1,   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,
   nil,    44,    45,   nil,    48,    31,   nil,   nil,   nil,   nil,
   nil,    31,   nil,    43,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    59 ]

racc_goto_check = [
     4,    11,     8,     6,     5,     4,     3,     8,     2,     9,
    10,     1,   nil,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   nil,    11,    11,   nil,    11,    11,   nil,   nil,   nil,   nil,
   nil,    11,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    11,     8,     4,    -2,     2,     1,   nil,   -31,   -30,
    -5,   -15,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    16,    27,
    18,    21,    26 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_1,
  0, 20, :_reduce_2,
  3, 20, :_reduce_3,
  2, 20, :_reduce_none,
  1, 21, :_reduce_none,
  2, 21, :_reduce_6,
  1, 21, :_reduce_7,
  1, 21, :_reduce_none,
  2, 22, :_reduce_9,
  2, 22, :_reduce_10,
  1, 22, :_reduce_11,
  2, 23, :_reduce_none,
  9, 24, :_reduce_13,
  1, 25, :_reduce_14,
  2, 25, :_reduce_15,
  4, 28, :_reduce_16,
  8, 28, :_reduce_none,
  4, 28, :_reduce_18,
  1, 26, :_reduce_19,
  2, 26, :_reduce_20,
  3, 27, :_reduce_21,
  3, 27, :_reduce_22,
  4, 30, :_reduce_none,
  1, 29, :_reduce_24,
  1, 29, :_reduce_25,
  1, 29, :_reduce_26,
  1, 29, :_reduce_27,
  3, 29, :_reduce_28,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none ]

racc_reduce_n = 31

racc_shift_n = 62

racc_token_table = {
  false => 0,
  :error => 1,
  "||" => 2,
  "=" => 3,
  :EOL => 4,
  :IDENT => 5,
  ":" => 6,
  :IF => 7,
  :COND => 8,
  "(" => 9,
  ")" => 10,
  :THEN => 11,
  :NUMBER => 12,
  :CMD => 13,
  :SST => 14,
  :STRING => 15,
  :RESERVED => 16,
  "/" => 17 }

racc_nt_base = 18

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"||\"",
  "\"=\"",
  "EOL",
  "IDENT",
  "\":\"",
  "IF",
  "COND",
  "\"(\"",
  "\")\"",
  "THEN",
  "NUMBER",
  "CMD",
  "SST",
  "STRING",
  "RESERVED",
  "\"/\"",
  "$start",
  "program",
  "stmt_list",
  "stmt",
  "command",
  "label",
  "if_stmt",
  "parms",
  "args",
  "expr",
  "parm",
  "primary",
  "function" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'cl.racc', 15)
  def _reduce_1(val, _values)
                      RootNode.new(val[0])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 20)
  def _reduce_2(val, _values)
                      result = []
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 24)
  def _reduce_3(val, _values)
                      val[0].push val[1]
                
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'cl.racc', 31)
  def _reduce_6(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 35)
  def _reduce_7(val, _values)
                      CommandNode.new(@file_name, val[0][0], nil, nil)
                
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'cl.racc', 41)
  def _reduce_9(val, _values)
                      CommandNode.new(@file_name, val[0][0], val[0][1], val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 45)
  def _reduce_10(val, _values)
                      CommandNode.new(@file_name, val[0][0], val[0][1], val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 49)
  def _reduce_11(val, _values)
                      CommandNode.new(@file_name, val[0][0], val[0][1], nil)
                
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'cl.racc', 56)
  def _reduce_13(val, _values)
                      IfNode.new(@file_name, val[0][0], val[3], val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 61)
  def _reduce_14(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 65)
  def _reduce_15(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 70)
  def _reduce_16(val, _values)
                      ParmNode.new(@file_name, val[0][0], val[0][1], val[2])
                
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'cl.racc', 75)
  def _reduce_18(val, _values)
                      val[2]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 81)
  def _reduce_19(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 85)
  def _reduce_20(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 90)
  def _reduce_21(val, _values)
                       [val[0][0], val[0][1] + '=' + val[2][1]]  
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 94)
  def _reduce_22(val, _values)
                       [val[0][0], val[0][1] + val[2][1]]                     
                
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'cl.racc', 101)
  def _reduce_24(val, _values)
                       val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 105)
  def _reduce_25(val, _values)
                       val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 109)
  def _reduce_26(val, _values)
                       val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 113)
  def _reduce_27(val, _values)
                       val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 117)
  def _reduce_28(val, _values)
                       val[0]
                
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

def _reduce_none(val, _values)
  val[0]
end

end   # class ClParser
