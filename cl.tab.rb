#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require './cl.rex.rb'

class ClParser < Racc::Parser

module_eval(<<'...end cl.racc/module_eval...', 'cl.racc', 127)

  def parse(file, file_name)
    @file_name = file_name
    @q = ClLexer.new
    @q.load_file(file_name)
    @yydebug = true
    do_parse
  end

  def next_token
    @q.next_token
  end

  def on_error(t, v, values)
    if v
      line = v[0]
      v = v[1]
    else
      line = 'last'
    end
    raise Racc::ParseError, "#{@file_name}:#{line}: syntax error on #{v.inspect}"
  end
...end cl.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,     3,     5,     9,    32,    10,    42,    22,    32,    23,
    24,    22,    27,    23,    24,    22,    27,    23,    24,    32,
    27,    37,    36,    32,    52,    43,    22,    33,    23,    24,
    22,    27,    23,    24,    30,    27,    19,    17,    37,    36,
    32,    34,    20,    22,    20,    23,    24,    22,    27,    23,
    24,    19,    27,    37,    36,    37,   -30,    32,    22,    20,
    23,    24,    49,    27,    22,    32,    23,    24,    39,    27,
    38,    33,    22,    35,    23,    24,    28,    27,    34,    37,
    36,    51,    14,    12,    53,    11,    50,    54,    55,    56,
    57,    58,    59,    60,    61,    14,    63,    64,    65 ]

racc_action_check = [
    37,     1,     2,     2,    33,     2,    34,    37,    36,    37,
    37,    33,    37,    33,    33,    36,    33,    36,    36,    46,
    36,    21,    21,    38,    46,    35,    46,    30,    46,    46,
    38,    46,    38,    38,    15,    38,     9,     9,    48,    48,
    39,    32,    15,     9,     9,     9,     9,    39,     9,    39,
    39,    14,    39,    31,    31,    44,    44,    40,    14,    14,
    14,    14,    40,    14,    40,    16,    40,    40,    28,    40,
    27,    19,    16,    20,    16,    16,    10,    16,    19,    41,
    41,    43,     7,     4,    47,     3,    41,    50,    51,    53,
    54,    55,    56,    57,    58,    59,    60,    61,    62 ]

racc_action_pointer = [
   nil,     1,    -2,    85,    79,   nil,   nil,    77,   nil,    31,
    68,   nil,   nil,   nil,    46,    29,    60,   nil,   nil,    62,
    64,    19,   nil,   nil,   nil,   nil,   nil,    61,    59,   nil,
    18,    51,    25,    -1,     1,    20,     3,    -5,    18,    35,
    52,    77,   nil,    76,    53,   nil,    14,    74,    36,   nil,
    75,    79,   nil,    78,    78,    86,    83,    83,    84,    90,
    86,    87,    88,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -30,    -1,   -30,   -30,    -4,    -5,   -30,    -7,   -10,
   -30,    66,    -3,    -6,   -10,    -8,    -9,   -11,   -13,   -20,
   -30,   -18,   -21,   -22,   -23,   -25,   -26,   -30,   -30,   -14,
   -30,   -19,   -20,   -30,   -30,   -30,   -30,   -30,   -30,   -30,
   -30,   -18,   -24,   -30,   -27,   -28,   -30,   -26,   -30,   -15,
   -30,   -30,   -29,   -30,   -30,   -30,   -30,   -30,   -30,   -30,
   -30,   -30,   -30,   -16,   -17,   -12 ]

racc_goto_table = [
     6,    31,    40,     8,     7,    13,     4,    46,     2,    47,
    29,     1,   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,
   nil,    44,    45,   nil,    48,    31,   nil,   nil,   nil,   nil,
   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    62 ]

racc_goto_check = [
     4,    11,     8,     6,     5,     4,     3,     8,     2,     9,
    10,     1,   nil,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   nil,    11,    11,   nil,    11,    11,   nil,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    11,     8,     4,    -2,     2,     1,   nil,   -31,   -30,
    -5,   -15,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    16,    26,
    18,    21,    25 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_1,
  0, 20, :_reduce_2,
  3, 20, :_reduce_3,
  2, 20, :_reduce_none,
  1, 21, :_reduce_none,
  2, 21, :_reduce_6,
  1, 21, :_reduce_none,
  2, 22, :_reduce_8,
  2, 22, :_reduce_9,
  1, 22, :_reduce_10,
  2, 23, :_reduce_none,
  9, 24, :_reduce_12,
  1, 25, :_reduce_13,
  2, 25, :_reduce_14,
  4, 28, :_reduce_15,
  8, 28, :_reduce_none,
  8, 28, :_reduce_none,
  1, 26, :_reduce_18,
  2, 26, :_reduce_19,
  1, 29, :_reduce_20,
  1, 29, :_reduce_21,
  1, 29, :_reduce_22,
  1, 29, :_reduce_23,
  3, 29, :_reduce_24,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  3, 27, :_reduce_27,
  3, 27, :_reduce_28,
  4, 30, :_reduce_29 ]

racc_reduce_n = 30

racc_shift_n = 66

racc_token_table = {
  false => 0,
  :error => 1,
  "||" => 2,
  "=" => 3,
  :EOL => 4,
  :IDENT => 5,
  ":" => 6,
  :IF => 7,
  :COND => 8,
  "(" => 9,
  ")" => 10,
  :THEN => 11,
  :NUMBER => 12,
  :CMD => 13,
  :STRING => 14,
  :RESERVED => 15,
  "/" => 16,
  :SST => 17 }

racc_nt_base = 18

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"||\"",
  "\"=\"",
  "EOL",
  "IDENT",
  "\":\"",
  "IF",
  "COND",
  "\"(\"",
  "\")\"",
  "THEN",
  "NUMBER",
  "CMD",
  "STRING",
  "RESERVED",
  "\"/\"",
  "SST",
  "$start",
  "program",
  "stmt_list",
  "stmt",
  "command",
  "label",
  "if_stmt",
  "parms",
  "args",
  "expr",
  "parm",
  "primary",
  "function" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'cl.racc', 15)
  def _reduce_1(val, _values)
                      RootNode.new(val[0])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 20)
  def _reduce_2(val, _values)
                      result = []
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 24)
  def _reduce_3(val, _values)
                      val[0].push val[1]
                
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'cl.racc', 31)
  def _reduce_6(val, _values)
                      val[1]
                
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'cl.racc', 37)
  def _reduce_8(val, _values)
                      CommandNode.new(@file_name, val[0][0], val[0][1], val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 41)
  def _reduce_9(val, _values)
                      CommandNode.new(@file_name, val[0][0], val[0][1], val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 45)
  def _reduce_10(val, _values)
                      CommandNode.new(@file_name, val[0][0], val[0][1], nil)
                
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cl.racc', 52)
  def _reduce_12(val, _values)
                      IfNode.new(@file_name, val[0][0], val[3], val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 57)
  def _reduce_13(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 61)
  def _reduce_14(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 66)
  def _reduce_15(val, _values)
                      ParmNode.new(@file_name, val[0][0], val[0][1], val[2])
                
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'cl.racc', 73)
  def _reduce_18(val, _values)
                      [val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 77)
  def _reduce_19(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 82)
  def _reduce_20(val, _values)
                      LiteralNode.new(@file_name, val[0][0], val[0][1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 86)
  def _reduce_21(val, _values)
                      LiteralNode.new(@file_name, val[0][0], val[0][1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 90)
  def _reduce_22(val, _values)
                      StringNode.new(@file_name, val[0][0], val[0][1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 94)
  def _reduce_23(val, _values)
                      ReservedNode.new(@file_name, val[0][0], val[0][1])
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 98)
  def _reduce_24(val, _values)
                      LiteralNode.new(@file_name, val[0][0], val[0][1].to_s + '/' + val[0][2].to_s)
                
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'cl.racc', 105)
  def _reduce_27(val, _values)
                      LiteralNode.new(@file_name, val[0].lineno, '=')
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 109)
  def _reduce_28(val, _values)
                      LiteralNode.new(@file_name, val[0].lineno, '||')
                
  end
.,.,

module_eval(<<'.,.,', 'cl.racc', 114)
  def _reduce_29(val, _values)
                      FuncallNode.new(@file_name, val[0][0], '[]', [val[1], val[3]])
                
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class ClParser
